# Generated by Django 4.2.7 on 2025-09-19 11:45

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('datagouv_id', models.CharField(help_text='ID du dataset sur data.gouv.fr', max_length=100, unique=True)),
                ('title', models.CharField(help_text='Titre du dataset', max_length=500)),
                ('slug', models.SlugField(help_text='Slug du dataset', max_length=200, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description du dataset')),
                ('organization', models.CharField(blank=True, help_text='Organisation propriétaire', max_length=300)),
                ('tags', models.JSONField(blank=True, default=list, help_text='Tags associés au dataset')),
                ('license', models.CharField(blank=True, help_text='Licence du dataset', max_length=100)),
                ('created_at_source', models.DateTimeField(blank=True, help_text='Date de création sur data.gouv.fr', null=True)),
                ('updated_at_source', models.DateTimeField(blank=True, help_text='Dernière modification sur data.gouv.fr', null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Dataset actif dans notre système')),
                ('last_sync', models.DateTimeField(blank=True, help_text='Dernière synchronisation', null=True)),
            ],
            options={
                'verbose_name': 'Dataset',
                'verbose_name_plural': 'Datasets',
                'ordering': ['-updated_at_source'],
            },
        ),
        migrations.CreateModel(
            name='SyncLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sync_type', models.CharField(choices=[('full', 'Synchronisation complète'), ('incremental', 'Synchronisation incrémentale'), ('single', 'Dataset unique')], default='incremental', max_length=20)),
                ('status', models.CharField(choices=[('started', 'Démarré'), ('completed', 'Terminé'), ('failed', 'Échec')], default='started', max_length=20)),
                ('datasets_processed', models.PositiveIntegerField(default=0)),
                ('resources_processed', models.PositiveIntegerField(default=0)),
                ('records_created', models.PositiveIntegerField(default=0)),
                ('message', models.TextField(blank=True, help_text='Message de statut')),
                ('error_details', models.TextField(blank=True, help_text='Détails des erreurs')),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Sync Log',
                'verbose_name_plural': 'Sync Logs',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('datagouv_id', models.CharField(help_text='ID de la ressource sur data.gouv.fr', max_length=100)),
                ('title', models.CharField(help_text='Titre de la ressource', max_length=500)),
                ('description', models.TextField(blank=True, help_text='Description de la ressource')),
                ('url', models.URLField(help_text='URL de téléchargement de la ressource')),
                ('format', models.CharField(help_text='Format du fichier (CSV, JSON, etc.)', max_length=50)),
                ('mime_type', models.CharField(blank=True, help_text='Type MIME du fichier', max_length=100)),
                ('file_size', models.BigIntegerField(blank=True, help_text='Taille du fichier en octets', null=True)),
                ('is_processed', models.BooleanField(default=False, help_text='Ressource traitée et parsée')),
                ('processing_status', models.CharField(choices=[('pending', 'En attente'), ('processing', 'En cours'), ('completed', 'Terminé'), ('failed', 'Échec')], default='pending', max_length=20)),
                ('processing_error', models.TextField(blank=True, help_text="Message d'erreur si échec")),
                ('created_at_source', models.DateTimeField(blank=True, null=True)),
                ('updated_at_source', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_processed', models.DateTimeField(blank=True, null=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='data_manager.dataset')),
            ],
            options={
                'verbose_name': 'Resource',
                'verbose_name_plural': 'Resources',
                'ordering': ['-updated_at_source'],
                'unique_together': {('dataset', 'datagouv_id')},
            },
        ),
        migrations.CreateModel(
            name='DataRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('data', models.JSONField(help_text='Données parsées de la ressource (format JSON)')),
                ('row_number', models.PositiveIntegerField(help_text='Numéro de ligne dans le fichier source')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_records', to='data_manager.resource')),
            ],
            options={
                'verbose_name': 'Data Record',
                'verbose_name_plural': 'Data Records',
                'ordering': ['resource', 'row_number'],
                'unique_together': {('resource', 'row_number')},
            },
        ),
    ]
